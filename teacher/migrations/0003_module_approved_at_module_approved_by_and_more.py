# Generated by Django 5.2.1 on 2025-06-21 18:35

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("student", "0012_userpreferences"),
        ("teacher", "0002_module_moduleassignment_moduleenrollment"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="module",
            name="approved_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="module",
            name="approved_by",
            field=models.ForeignKey(
                blank=True,
                help_text="Admin who approved this module",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="approved_modules",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="module",
            name="classroom",
            field=models.CharField(
                blank=True, help_text="Physical classroom/location", max_length=50
            ),
        ),
        migrations.AddField(
            model_name="module",
            name="created_by_teacher",
            field=models.BooleanField(
                default=False, help_text="True if created by teacher, False if by admin"
            ),
        ),
        migrations.AddField(
            model_name="module",
            name="primary_teacher",
            field=models.ForeignKey(
                blank=True,
                help_text="Main teacher responsible for this module",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="primary_modules",
                to="teacher.teacherprofile",
            ),
        ),
        migrations.AddField(
            model_name="module",
            name="requires_approval",
            field=models.BooleanField(
                default=True, help_text="Teacher-created modules need admin approval"
            ),
        ),
        migrations.CreateModel(
            name="ProjectAssignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "instructions",
                    models.TextField(
                        blank=True, help_text="Detailed instructions for students"
                    ),
                ),
                ("deadline", models.DateTimeField()),
                (
                    "assignment_type",
                    models.CharField(
                        choices=[
                            ("direct", "Direct Assignment"),
                            ("choice_based", "Choice-Based Assignment"),
                        ],
                        max_length=20,
                    ),
                ),
                ("is_group_work", models.BooleanField(default=False)),
                ("min_group_size", models.IntegerField(default=1)),
                ("max_group_size", models.IntegerField(default=1)),
                (
                    "target_selection",
                    models.CharField(
                        choices=[
                            ("all_students", "All Students in Module"),
                            ("specific_students", "Specific Students"),
                        ],
                        default="all_students",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("published", "Published"),
                            ("group_formation", "Group Formation Phase"),
                            ("selection_open", "Selection Open"),
                            ("selection_closed", "Selection Closed"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                (
                    "group_formation_deadline",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("selection_deadline", models.DateTimeField(blank=True, null=True)),
                (
                    "module",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="project_assignments",
                        to="teacher.module",
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assignments",
                        to="teacher.teacherprofile",
                    ),
                ),
            ],
            options={
                "verbose_name": "Project Assignment",
                "verbose_name_plural": "Project Assignments",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProjectOption",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "requirements",
                    models.TextField(
                        blank=True, help_text="Specific requirements or skills needed"
                    ),
                ),
                (
                    "estimated_difficulty",
                    models.CharField(
                        choices=[
                            ("easy", "Easy"),
                            ("medium", "Medium"),
                            ("hard", "Hard"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                (
                    "is_unique",
                    models.BooleanField(
                        default=True, help_text="Only one group can choose this project"
                    ),
                ),
                (
                    "max_groups",
                    models.IntegerField(
                        default=1, help_text="Maximum groups if not unique"
                    ),
                ),
                (
                    "current_groups",
                    models.IntegerField(
                        default=0, help_text="Current number of groups assigned"
                    ),
                ),
                ("order", models.IntegerField(default=0)),
                ("is_available", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "assignment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="project_options",
                        to="teacher.projectassignment",
                    ),
                ),
            ],
            options={
                "verbose_name": "Project Option",
                "verbose_name_plural": "Project Options",
                "ordering": ["order", "title"],
            },
        ),
        migrations.CreateModel(
            name="StudentGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("group_name", models.CharField(max_length=100)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("forming", "Forming"),
                            ("complete", "Complete"),
                            ("selected_project", "Selected Project"),
                            ("submitted", "Submitted"),
                            ("validated", "Validated"),
                        ],
                        default="forming",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("project_selected_at", models.DateTimeField(blank=True, null=True)),
                (
                    "assignment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="student_groups",
                        to="teacher.projectassignment",
                    ),
                ),
                (
                    "chosen_option",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="chosen_by_groups",
                        to="teacher.projectoption",
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_groups",
                        to="student.studentprofile",
                    ),
                ),
                (
                    "members",
                    models.ManyToManyField(
                        related_name="assignment_groups", to="student.studentprofile"
                    ),
                ),
            ],
            options={
                "verbose_name": "Student Group",
                "verbose_name_plural": "Student Groups",
                "ordering": ["-created_at"],
                "unique_together": {("assignment", "group_name")},
            },
        ),
        migrations.CreateModel(
            name="DirectStudentAssignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("assigned_at", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("assigned", "Assigned"),
                            ("started", "Started"),
                            ("submitted", "Submitted"),
                            ("validated", "Validated"),
                        ],
                        default="assigned",
                        max_length=20,
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="direct_assignments",
                        to="student.studentprofile",
                    ),
                ),
                (
                    "assignment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="direct_assignments",
                        to="teacher.projectassignment",
                    ),
                ),
            ],
            options={
                "verbose_name": "Direct Student Assignment",
                "verbose_name_plural": "Direct Student Assignments",
                "ordering": ["-assigned_at"],
                "unique_together": {("assignment", "student")},
            },
        ),
        migrations.CreateModel(
            name="GroupInvitation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("accepted", "Accepted"),
                            ("rejected", "Rejected"),
                            ("expired", "Expired"),
                        ],
                        default="pending",
                        max_length=10,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "recipient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_group_invitations",
                        to="student.studentprofile",
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_group_invitations",
                        to="student.studentprofile",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invitations",
                        to="teacher.studentgroup",
                    ),
                ),
            ],
            options={
                "verbose_name": "Group Invitation",
                "verbose_name_plural": "Group Invitations",
                "ordering": ["-created_at"],
                "unique_together": {("group", "recipient")},
            },
        ),
    ]
